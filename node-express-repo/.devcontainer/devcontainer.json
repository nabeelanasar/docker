{
	"name": "Node Express VS Code Container",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "..\\dockerfile",

	"build": { 
		"target": "dev1"
	},

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"workbench.colorTheme":"Noctis Minimus",
		"workbench.colorCustomizations": {
			"[Noctis Minimus]": {
				"titleBar.activeBackground": "#b75d69",
				"titleBar.activeForeground": "#1a1423",
				"titleBar.inactiveBackground": "#D5A3A9",
				"titleBar.inactiveForeground": "#1a1423",
				"tab.activeBorder": "#ff0000",
				"tab.activeBackground": "#212d40"
			}
		},
		"terminal.integrated.shell.linux": null
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"esbenp.prettier-vscode"
	],

	// Publish the ports
	"appPort": [3030, "9002:9229"],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	"postCreateCommand": "npm install",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
